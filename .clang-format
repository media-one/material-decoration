# The extra indent or outdent of access modifiers
AccessModifierOffset: -4

# Align parameters on the open bracket
AlignAfterOpenBracket: Align

# Disallows contracting simple braced statements to a single line
AllowShortBlocksOnASingleLine: 'false'

# Short case labels wont't be contracted to a single line
AllowShortCaseLabelsOnASingleLine: 'false'

# Merge all inline functions fitting on a single line
AllowShortFunctionsOnASingleLine: 'Inline'

# If (a) return; cannot be put on a single line
AllowShortIfStatementsOnASingleLine: 'false'

# While (true) continue; cannot be put on a single line
AllowShortLoopsOnASingleLine: 'false'

# Break after the template<...> of a template declaration.
AlwaysBreakTemplateDeclarations: 'true'

# Configure each individual brace in BraceWrapping
BreakBeforeBraces: 'Custom'

# Control of individual brace wrapping cases
BraceWrapping: {
    AfterClass: 'true'
    AfterControlStatement: 'false'
    AfterEnum : 'true'
    AfterFunction : 'true'
    AfterNamespace : 'true'
    AfterStruct : 'true'
    AfterUnion : 'true'
    BeforeCatch : 'false'
    BeforeElse : 'false'
    IndentBraces : 'false'
}

# The constructor initializers style to use.
BreakConstructorInitializersBeforeComma: 'true'

# The column limit
ColumnLimit: '100'

# TabWidth (unsigned)
# The number of columns used for tab stops.
TabWidth: 4

# IndentWidth (unsigned)
# The number of columns to use for indentation.
IndentWidth: 4

# UseTab (UseTabStyle)
# The way to use tab characters in the resulting file.
# Possible values:
#   UT_Never (in configuration: Never) Never use tab.
#   UT_ForIndentation (in configuration: ForIndentation) Use tabs only for indentation.
#   UT_Always (in configuration: Always) Use tabs whenever we need to fill whitespace that spans at least from one tab stop to the next one.
UseTab: Always

# Targeted language
Language: Cpp

# No indentation for namespaces.
NamespaceIndentation: None

# Pointer is aligned to right side
PointerAlignment: Right

# High penalty to avoid line break just after return type
PenaltyReturnTypeOnItsOwnLine: 10000

# Treat 'catch' BDD macros as control instructions
ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH, GIVEN, WHEN, AND_WHEN, THEN, AND_THEN,
    SECTION ]

SortIncludes: 'true'

IncludeCategories:
  - Regex: '^<'
    Priority: 1
  - Regex: '^"'
    Priority: 99

ReflowComments: 'true'
AlignTrailingComments: 'true'

# $Id$
